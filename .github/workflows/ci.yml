name: CI
on: [push]
jobs:
  test_zero:
    name: unittest0
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
      MIX_TEST_PARTITION: 5
    services:
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      dynamo_db:
        image: amazon/dynamodb-local:1.17.1
        ports:
          - 8000:8000
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: '24.0.5'
          elixir-version: '1.13.2'
      - run: mix local.rebar --force
      - run: mix local.hex --force
      - run: mix deps.get
      - run: mix ecto.create
      - run: mix ecto.migrate
      - run: mix format --check-formatted
      - run: mix test
  # test:
  #   name: unittest
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: earthly/actions/setup-earthly@v1
  #       with:
  #         version: v0.5.10
  #     - uses: actions/checkout@v2
  #     - run: earthly -P +rdb
  #     - run: docker ps
  #     - run: sudo docker network ls 
  #     - run: sudo chown -R runner:docker data # data/pgは+rdb時に自動生成されるファイルで権限が違うため、ここで付与しておく
  #     - run: sudo apt-get install postgresql-client
  #     - run: sudo pg_isready --host=localhost --port=5432 # こいつが通らないのわけわからないわけわからないので一旦pending
  #     - run: earthly -P +test
  # test-postgres:
  #   name: postgres integration test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       elixirbase:
  #         - "1.9.4-erlang-22.3.4.16-alpine-3.13.1"
  #       postgres:
  #         - "11.11"
  #         - "9.6"
  #         - "9.5"
  #   steps:
  #     - uses: earthly/actions/setup-earthly@v1
  #       with:
  #         version: v0.5.10
  #     - uses: actions/checkout@v2
  #     - name: test ecto_sql
  #       run: earthly -P --ci --build-arg ELIXIR_BASE=${{matrix.elixirbase}} --build-arg POSTGRES=${{matrix.postgres}} +integration-test-postgres
  # test-mysql:
  #   name: mysql integration test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       elixirbase:
  #         - "1.9.4-erlang-22.3.4.16-alpine-3.13.1"
  #       mysql:
  #         - "5.7"
  #   steps:
  #     - uses: earthly/actions/setup-earthly@v1
  #       with:
  #         version: v0.5.10
  #     - uses: actions/checkout@v2
  #     - name: test ecto_sql
  #       run: earthly -P --ci --build-arg ELIXIR_BASE=${{matrix.elixirbase}} --build-arg POSTGRES=${{matrix.postgres}} +integration-test-mysql
  # test-mssql:
  #   name: mssql integration test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       elixirbase:
  #         - "1.9.4-erlang-22.1.7-alpine-3.11.3"
  #       mssql:
  #         - "2017"
  #         - "2019"
  #   steps:
  #     - uses: earthly/actions/setup-earthly@v1
  #       with:
  #         version: v0.5.10
  #     - uses: actions/checkout@v2
  #     - name: test ecto_sql
  #       run: earthly -P --ci --build-arg ELIXIR_BASE=${{matrix.elixirbase}} --build-arg MSSQL=${{matrix.mssql}} +integration-test-mssql
